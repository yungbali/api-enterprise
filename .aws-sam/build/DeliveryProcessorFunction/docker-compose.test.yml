version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=enterprise_db
      - POSTGRES_USER=enterprise_user
      - POSTGRES_PASSWORD=enterprise_pass
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - enterprise-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U enterprise_user -d enterprise_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Redis for Caching and Message Broker
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - enterprise-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Main FastAPI Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - DEBUG=true
      - DATABASE_URL=postgresql://enterprise_user:enterprise_pass@postgres:5432/enterprise_db
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=dev-secret-key-change-in-production-with-32-chars-minimum
      - JWT_SECRET_KEY=dev-jwt-secret-key-change-in-production-with-32-chars-minimum
      - CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080"]
      - ALLOWED_HOSTS=["localhost", "127.0.0.1"]
      - CELERY_BROKER_URL=redis://redis:6379/1
      - CELERY_RESULT_BACKEND=redis://redis:6379/2
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=us-east-1
      - S3_BUCKET_NAME=test-bucket
      - WEBHOOK_SECRET=test-webhook-secret
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - enterprise-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
  redis_data:

networks:
  enterprise-network:
    driver: bridge
